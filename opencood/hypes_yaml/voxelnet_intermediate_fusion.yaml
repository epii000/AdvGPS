name: testing #1.attfuse_voxelNet_SOK_mean+2std_all #AdvGRL_v2xvit
save_path: /home/jinlongli/2.model_saved/3.Attack_V2V2023
root_dir: /home/jinlongli/opv2v_data_dumping/train # /home/jinlongli/opv2v_data_dumping/train
root_dir_target: /home/jinlongli/opv2v_data_dumping/train  #/home/jinlongli/V2V4Real/train  #/home/jinlongli/V2V4Real/train
validate_dir: /home/jinlongli/personal/DATASet/opv2v_data_dumping/test_culver_city

Attack_params:
  attacked_pose_save: True
  npy_save: True
  random: False
  num_iter_per: 10
  pose_x:
      use: &x True
      value: &x_value 1.118
  pose_y:
      use: &y True
      value: &y_value 1.118
  pose_z:
      use: &z True
      value: &z_value 1.395
  pose_roll:
      use: &roll True
      value: &roll_value 0.141
  pose_yaw:
      use: &yaw True
      value: &yaw_value 0.141
  pose_pitch:
      use: &pitch True
      value: &pitch_value 0.141
  pose_use: [*x,*y,*z,*roll,*yaw,*pitch]
  pose_value: [*x_value,*y_value,*z_value,*roll_value,*yaw_value,*pitch_value]


yaml_parser: "load_point_pillar_params"
train_params:
  batch_size: &batch_size 4
  epoches: &epoches 30
  eval_freq: 1
  save_freq: 1
  # max_cav: &max_cav 5

fusion:
  core_method: 'IntermediateFusionDataset' # LateFusionDataset, EarlyFusionDataset, IntermediateFusionDataset supported
  args: []

# preprocess-related
preprocess:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'VoxelPreprocessor' #'SpVoxelPreprocessor'
  args:
    voxel_size: &voxel_size [0.4, 0.4, 0.4]
    max_points_per_voxel: &T 32
    max_voxel_train: 36000
    max_voxel_test: 70000
  # lidar range for each individual cav.
  cav_lidar_range: &cav_lidar [-140.8, -41.6, -3, 140.8, 41.6, 1]

data_augment:
  - NAME: random_world_flip
    ALONG_AXIS_LIST: [ 'x' ]

  - NAME: random_world_rotation
    WORLD_ROT_ANGLE: [ -0.78539816, 0.78539816 ]

  - NAME: random_world_scaling
    WORLD_SCALE_RANGE: [ 0.95, 1.05 ]

# anchor box related
postprocess:
  core_method: 'VoxelPostprocessor' # VoxelPostprocessor, BevPostprocessor supported
  anchor_args:
    cav_lidar_range: *cav_lidar
    l: 3.9
    w: 1.6
    h: 1.56
    r: [0, 90]
    num: &achor_num 2
  target_args:
    pos_threshold: 0.6
    neg_threshold: 0.45
    score_threshold: 0.25
  order: 'hwl' # hwl or lwh
  max_num: 100 # maximum number of objects in a single frame. use this number to make sure different frames has the same dimension in the same batch
  nms_thresh: 0.15

# model related
model:
  core_method: voxel_net_intermediate # corresponding to VoxelNet
  args:
    N: *batch_size
    T: *T
    D: 12
    H: 208
    W: 704
    lidar_range: *cav_lidar
    voxel_size: *voxel_size
    anchor_num: *achor_num
    # max_cav: *max_cav
    compression: 0
    pillar_vfe:
      use_norm: true
      with_distance: false
      use_absolute_xyz: true
      num_filters: [ 64 ]
    point_pillar_scatter:
      num_features: 64
loss:
  core_method: point_pillar_loss
  args:
    cls_weight: 1.0
    reg: 2.0

optimizer:
  core_method: Adam
  lr: 0.0001
  args:
    eps: 1e-10
    weight_decay: 1e-4

lr_scheduler:
    core_method: cosineannealwarm #step, multistep, Exponential and cosineannealwarm support
    epoches: *epoches
    warmup_lr: 2e-4
    warmup_epoches: 10
    lr_min: 2e-5